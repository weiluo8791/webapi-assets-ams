{"version":3,"file":"index.js","sourceRoot":"D:/Programming/git/webapi-server-nodejs-v1.2/source/","sources":["protocols/native_handlers/AMSApis/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { RestApiRequestError } from '../../../errors';\r\nimport { Handler } from '../Handler';\r\nimport { Result } from '../../Protocol';\r\nimport { RequestContext } from '../../../RequestContext';\r\nimport { createConnection } from 'net';\r\nimport * as os from 'os';\r\n\r\nimport * as path from 'path';\r\nimport JsonPatch from 'fast-json-patch';\r\nimport * as StringUtil from '../../../util/String';\r\nimport * as FsUtil from '../../../util/Filesystem';\r\nimport { CacheClass, LoadResult, del as deleteCache, update as updateCache, get as getCache } from '../../../Cache';\r\nimport { resolve as resolveModel } from '../../../models/Model';\r\nimport { TYPEURI as resourceTypeUri, Resource } from '../../../models/v1/resource';\r\n\r\n\r\n// constant for name length\r\nconst REMOTE_ADDR_L = '000b';\r\nconst REMOTE_HOST_L = '000b';\r\nconst HTTP_USER_AGENT_L = '000f';\r\nconst HTTPS_L = '0005';\r\nconst SERVER_PORT_L = '000b';\r\nconst SERVER_PORT_SECURE_L = '0012';\r\nconst NTUSER_L = '0006';\r\nconst TYPE_L = '0004';\r\nconst Task_L = '0004';\r\nconst WAC_L = '0003';\r\nconst COOKIE_L = '0006';\r\nconst text_L = '0004';\r\nconst start_L = '0005';\r\nconst end_L = '0003';\r\n\r\n// interface for AMS package for GET\r\ninterface AmsPackageGet {\r\n    REMOTE_ADDR: string;\r\n    REMOTE_HOST: string;\r\n    HTTP_USER_AGENT: string;\r\n    HTTPS: string;\r\n    SERVER_PORT: string;\r\n    SERVER_PORT_SECURE: string;\r\n    NTUSER: string;\r\n    TYPE: string;\r\n    task: string;\r\n    text: string;\r\n    start: string;\r\n    end: string;\r\n    AMS_PARAM_TOTAL: string;\r\n}\r\n\r\n// interface for AMS package PUT\r\ninterface AmsPackagePut {\r\n    REMOTE_ADDR: string;\r\n    REMOTE_HOST: string;\r\n    HTTP_USER_AGENT: string;\r\n    HTTPS: string;\r\n    SERVER_PORT: string;\r\n    SERVER_PORT_SECURE: string;\r\n    NTUSER: string;\r\n    TYPE: string;\r\n    WAC: string;\r\n    COOKIE: string;\r\n    task: string;\r\n    AMS_PARAM_TOTAL: string;\r\n}\r\n\r\n// async GET function for sending ams packet and getting response from AMS\r\nasync function getAmsData(amsPackage: string) {\r\n    const HOST = '172.25.0.2';\r\n    const PORT = 1022;\r\n    let totalData = [];\r\n\r\n    totalData = [];\r\n    return new Promise((resolve, reject) => {\r\n        let client = createConnection({ host: HOST, port: PORT }, () => {\r\n            // 'connect' listener\r\n            // console.log('connected to server!');\r\n            let message = Buffer.from(amsPackage, 'hex');\r\n            // console.log(message.toString());\r\n            client.write(message);\r\n        });\r\n        client.on('data', (data) => {\r\n            // console.log(`Received ${data.length} bytes of data.`);\r\n            totalData.push(data);\r\n        });\r\n        client.on('close', () => {\r\n            // console.log('disconnected from server');\r\n            let data = Buffer.concat(totalData);\r\n            client.destroy();\r\n            // console.log(data.toString());\r\n            resolve(data);\r\n        });\r\n    });\r\n}\r\n\r\n// async PUT function for sending ams packet and getting response from AMS\r\nasync function putAmsData(amsPacket: string) {\r\n    // Define constant\r\n    const HOST = '172.25.0.2';\r\n    const PORT = 1022;\r\n    // Define variable\r\n    let totalData = [];\r\n\r\n    totalData = [];\r\n    return new Promise((resolve, reject) => {\r\n        let client = createConnection({ host: HOST, port: PORT }, () => {\r\n            // 'connect' listener\r\n            // console.log('connected to server!');\r\n            let message = Buffer.from(amsPacket, 'hex');\r\n            // console.log(message.toString());\r\n            client.write(message);\r\n        });\r\n        client.on('data', (data) => {\r\n            // console.log(`Received ${data.length} bytes of data.`);\r\n            totalData.push(data);\r\n        });\r\n        client.on('close', () => {\r\n            // console.log('disconnected from server');\r\n            let data = Buffer.concat(totalData);\r\n            client.destroy();\r\n            // console.log(data.toString());\r\n            resolve(data);\r\n        });\r\n    });\r\n}\r\n\r\n// process AMS buffer response, separate header and body\r\nfunction processAmsData(buf) {\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    let header = '';\r\n    let resData = '';\r\n    // process for header\r\n    while (i < buf.length) {\r\n        if (buf.readIntBE(i, 1) === 2) {\r\n            j = i + 1; // value length position\r\n            k = buf.readIntBE(j, 1); // value length\r\n            // header terminate\r\n            if (k === 1 && buf.readInt8(j + 1) === 10) {\r\n                i = j + 2;\r\n                break;\r\n            }\r\n            let value = buf.slice(j + 1, j + k + 1);\r\n            header += value.toString();\r\n        }\r\n        i = j + k + 1;\r\n    }\r\n    // process for body\r\n    while (i < buf.length) {\r\n        if (buf.readIntBE(i, 1) === 2) {\r\n            j = i + 1; // value length position\r\n            k = buf.readIntBE(j, 1); // value length\r\n            let value = buf.slice(j + 1, j + k + 1);\r\n            resData += value.toString();\r\n        }\r\n        // data terminate\r\n        if (buf.readIntBE(i, 1) === 1) {\r\n            break;\r\n        }\r\n        i = j + k + 1;\r\n    }\r\n\r\n    return JSON.parse(resData);\r\n}\r\n\r\n// return localIP in array\r\nfunction getLocalIp() {\r\n    let interfaces = os.networkInterfaces();\r\n    let addresses = [];\r\n    for (let k in interfaces) {\r\n        for (let k2 in interfaces[k]) {\r\n            let address = interfaces[k][k2];\r\n            if (address.family === 'IPv4' && !address.internal) {\r\n                addresses.push(address.address);\r\n            }\r\n        }\r\n    }\r\n    return addresses;\r\n}\r\n\r\n// for length in the format of hex 0000\r\nfunction hex16(val) {\r\n    val &= 0xFFFF;\r\n    let hex = val.toString(16).toUpperCase();\r\n    return ('0000' + hex).slice(-4);\r\n}\r\n\r\n// from string  in for format of hex 00\r\nfunction stringToHex(str) {\r\n    let hex = '';\r\n    for (let i = 0; i < str.length; i++) {\r\n        hex += '' + str.charCodeAt(i).toString(16);\r\n    }\r\n    return hex;\r\n}\r\n\r\n/* // pad index with zero on left\r\nfunction pad(num, size) {\r\n    let s = num + '';\r\n    while (s.length < size) {\r\n        s = '0' + s;\r\n    }\r\n    return s;\r\n} */\r\n\r\n// setup a AMS PUT packet\r\nfunction putPackageAmsSend(task: string, Type: string, ctx: RequestContext) {\r\n    // Define variable\r\n    let localIp = getLocalIp()[0];\r\n    let totalParameters: string;\r\n    let body: string;\r\n    let bodyJson: string[];\r\n\r\n    body = JSON.stringify(ctx.body);\r\n    bodyJson = body.match(/.{1,100}/g);\r\n    // totalParameters = hex16(11 + bodyJson.length);\r\n    totalParameters = hex16(12);\r\n\r\n    let amsPackage: AmsPackagePut = {\r\n        REMOTE_ADDR: localIp,\r\n        REMOTE_HOST: localIp,\r\n        HTTP_USER_AGENT: 'PostmanRuntime/7.1.1',\r\n        HTTPS: 'off',\r\n        SERVER_PORT: '80',\r\n        SERVER_PORT_SECURE: '0',\r\n        NTUSER: 'WLUO@MEDITECH.COM',\r\n        TYPE: Type,\r\n        WAC: 'ZZZ',\r\n        COOKIE: 'RYCVcUkbZ382619',\r\n        task: task,\r\n        AMS_PARAM_TOTAL: totalParameters\r\n    };\r\n\r\n    let amsPacket = '';\r\n    let body_L = hex16(body.length);\r\n    let bodyName_L = hex16(8);\r\n    amsPacket += amsPackage.AMS_PARAM_TOTAL;\r\n    amsPacket += REMOTE_ADDR_L + stringToHex('REMOTE_ADDR') + hex16(amsPackage.REMOTE_ADDR.length) + stringToHex(amsPackage.REMOTE_ADDR);\r\n    amsPacket += REMOTE_HOST_L + stringToHex('REMOTE_HOST') + hex16(amsPackage.REMOTE_HOST.length) + stringToHex(amsPackage.REMOTE_HOST);\r\n    amsPacket += HTTP_USER_AGENT_L + stringToHex('HTTP_USER_AGENT') + hex16(amsPackage.HTTP_USER_AGENT.length) + stringToHex(amsPackage.HTTP_USER_AGENT);\r\n    amsPacket += HTTPS_L + stringToHex('HTTPS') + hex16(amsPackage.HTTPS.length) + stringToHex(amsPackage.HTTPS);\r\n    amsPacket += SERVER_PORT_L + stringToHex('SERVER_PORT') + hex16(amsPackage.SERVER_PORT.length) + stringToHex(amsPackage.SERVER_PORT);\r\n    amsPacket += SERVER_PORT_SECURE_L + stringToHex('SERVER_PORT_SECURE') + hex16(amsPackage.SERVER_PORT_SECURE.length) + stringToHex(amsPackage.SERVER_PORT_SECURE);\r\n    amsPacket += NTUSER_L + stringToHex('NTUSER') + hex16(amsPackage.NTUSER.length) + stringToHex(amsPackage.NTUSER);\r\n    amsPacket += TYPE_L + stringToHex('TYPE') + hex16(amsPackage.TYPE.length) + stringToHex(amsPackage.TYPE);\r\n    amsPacket += Task_L + stringToHex('task') + hex16(amsPackage.task.length) + stringToHex(amsPackage.task);\r\n    amsPacket += WAC_L + stringToHex('WAC') + hex16(amsPackage.WAC.length) + stringToHex(amsPackage.WAC);\r\n    amsPacket += COOKIE_L + stringToHex('COOKIE') + hex16(amsPackage.COOKIE.length) + stringToHex(amsPackage.COOKIE);\r\n    /*     bodyJson.forEach((element, index) => {\r\n            let name_L = hex16(('jsonBody' + pad(index, 5)).length);\r\n            let name = stringToHex('jsonBody' + pad(index, 5));\r\n            let value_L = hex16(element.length);\r\n            let value = stringToHex(element);\r\n            amsPacket += name_L + name + value_L + value;\r\n        }); */\r\n    amsPacket += bodyName_L + stringToHex('jsonBody') + body_L + stringToHex(body);\r\n\r\n    return amsPacket;\r\n}\r\n\r\n// setup a AMS GET packet\r\nfunction getPackageAmsSend(task: string, type: string, ntuser: string, text?: string, start?: string, end?: string) {\r\n    let localIp = getLocalIp()[0];\r\n    let totalParameters: string;\r\n\r\n    if (text) {\r\n        totalParameters = '000C';\r\n    } else {\r\n        totalParameters = '0009';\r\n    }\r\n    let amsPackage: AmsPackageGet = {\r\n        REMOTE_ADDR: localIp,\r\n        REMOTE_HOST: localIp,\r\n        HTTP_USER_AGENT: 'PostmanRuntime/7.1.1',\r\n        HTTPS: 'off',\r\n        SERVER_PORT: '80',\r\n        SERVER_PORT_SECURE: '0',\r\n        NTUSER: ntuser + '@MEDITECH.COM',\r\n        TYPE: type,\r\n        task: task,\r\n        text: text,\r\n        start: start,\r\n        end: end,\r\n        AMS_PARAM_TOTAL: totalParameters\r\n    };\r\n\r\n    let amsPacket = '';\r\n    amsPacket += amsPackage.AMS_PARAM_TOTAL;\r\n    amsPacket += REMOTE_ADDR_L + stringToHex('REMOTE_ADDR') + hex16(amsPackage.REMOTE_ADDR.length) + stringToHex(amsPackage.REMOTE_ADDR);\r\n    amsPacket += REMOTE_HOST_L + stringToHex('REMOTE_HOST') + hex16(amsPackage.REMOTE_HOST.length) + stringToHex(amsPackage.REMOTE_HOST);\r\n    amsPacket += HTTP_USER_AGENT_L + stringToHex('HTTP_USER_AGENT') + hex16(amsPackage.HTTP_USER_AGENT.length) + stringToHex(amsPackage.HTTP_USER_AGENT);\r\n    amsPacket += HTTPS_L + stringToHex('HTTPS') + hex16(amsPackage.HTTPS.length) + stringToHex(amsPackage.HTTPS);\r\n    amsPacket += SERVER_PORT_L + stringToHex('SERVER_PORT') + hex16(amsPackage.SERVER_PORT.length) + stringToHex(amsPackage.SERVER_PORT);\r\n    amsPacket += SERVER_PORT_SECURE_L + stringToHex('SERVER_PORT_SECURE') + hex16(amsPackage.SERVER_PORT_SECURE.length) + stringToHex(amsPackage.SERVER_PORT_SECURE);\r\n    amsPacket += NTUSER_L + stringToHex('NTUSER') + hex16(amsPackage.NTUSER.length) + stringToHex(amsPackage.NTUSER);\r\n    amsPacket += TYPE_L + stringToHex('TYPE') + hex16(amsPackage.TYPE.length) + stringToHex(amsPackage.TYPE);\r\n    amsPacket += Task_L + stringToHex('task') + hex16(amsPackage.task.length) + stringToHex(amsPackage.task);\r\n\r\n    if (text) {\r\n        amsPacket += text_L + stringToHex('text') + hex16(amsPackage.text.length) + stringToHex(amsPackage.text);\r\n        amsPacket += start_L + stringToHex('start') + hex16(amsPackage.start.length) + stringToHex(amsPackage.start);\r\n        amsPacket += end_L + stringToHex('end') + hex16(amsPackage.end.length) + stringToHex(amsPackage.end);\r\n    }\r\n\r\n    return amsPacket;\r\n}\r\n\r\n\r\n\r\nexport abstract class AMSApis extends Handler {\r\n\r\n    protected abstract dataPath: string;\r\n    protected abstract systemGeneratedId: boolean;\r\n    protected abstract resourceUri: string;\r\n    protected abstract resourceListUri: string;\r\n    protected abstract formUri(id: string): string;\r\n\r\n    protected preCommitHook(json: any, ctx: RequestContext): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected postCommitHook(json: any, ctx: RequestContext): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected preDeleteHook(id: string, ctx: RequestContext): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected postDeleteHook(id: string, ctx: RequestContext): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_get(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        let task: string;\r\n        let range: string;\r\n        let start: string;\r\n        let end: string;\r\n        let TYPE: string;\r\n        let text: string;\r\n        let NTUSER: string;\r\n\r\n        // default user is ROGERS\r\n        NTUSER = ctx.query['NTUSER'] ? ctx.query['NTUSER'] : 'ROGERS';\r\n        Promise.all([ctx.apiInfo])\r\n            .then(([apiInfo]) => {\r\n                task = apiInfo.routeParams['task'];\r\n                switch (apiInfo.id) {\r\n                    case 'ams-view._':\r\n                        TYPE = 'TaskGet';\r\n                        return getPackageAmsSend(task, TYPE, NTUSER);\r\n                    case 'ams-view._.question':\r\n                        TYPE = 'TaskGetQuestions';\r\n                        return getPackageAmsSend(task, TYPE, NTUSER);\r\n                    case 'ams-view._.customerText._':\r\n                        TYPE = 'TaskGetText';\r\n                        range = apiInfo.routeParams['range'];\r\n                        if (range) {\r\n                            start = range.split('-')[0];\r\n                            end = range.split('-')[1];\r\n                        }\r\n                        if (start && end) {\r\n                            text = 'C';\r\n                        } else {\r\n                            text = 'TC';\r\n                        }\r\n                        return getPackageAmsSend(task, TYPE, NTUSER, text, start, end);\r\n                    case 'ams-view._.inhouseText._':\r\n                        TYPE = 'TaskGetText';\r\n                        range = apiInfo.routeParams['range'];\r\n                        if (range) {\r\n                            start = range.split('-')[0];\r\n                            end = range.split('-')[1];\r\n                        }\r\n                        if (start && end) {\r\n                            text = 'I';\r\n                        } else {\r\n                            text = 'TI';\r\n                        }\r\n                        return getPackageAmsSend(task, TYPE, NTUSER, text, start, end);\r\n                    default:\r\n                        throw new RestApiRequestError(500);\r\n                }\r\n            })\r\n            .then(p => {\r\n                return getAmsData(p);\r\n            })\r\n            .then(a => {\r\n                let jdata = processAmsData(a);\r\n                if (text === 'C') { // customerText\r\n                    // error give 400\r\n                    if (jdata['errors'] || jdata['error.code'] || jdata['error.message']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/customerText/_version/1/',\r\n                            uri: 'v1/resource/customerText/_version/1/',\r\n                            task: task,\r\n                            errors: jdata['errors'],\r\n                            'error.code': jdata['error.code'],\r\n                            'error.message': jdata['error.message']\r\n                        };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/customerText/_version/1/',\r\n                            uri: 'v1/resource/customerText/_version/1/',\r\n                            task: task,\r\n                            ntuser: jdata.ntuser,\r\n                            text: text,\r\n                            start: start,\r\n                            end: end,\r\n                            event: jdata['events']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (text === 'I') {  // inhouseText\r\n                    // error give 400\r\n                    if (jdata['errors'] || jdata['error.code'] || jdata['error.message']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/resource/inhouseText/_version/1/',\r\n                            task: task,\r\n                            errors: jdata['errors'],\r\n                            'error.code': jdata['error.code'],\r\n                            'error.message': jdata['error.message']\r\n                        };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/resource/inhouseText/_version/1/',\r\n                            task: task,\r\n                            ntuser: jdata.ntuser,\r\n                            text: text,\r\n                            start: start,\r\n                            end: end,\r\n                            event: jdata['events']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (text === 'TC') {  // customerText count\r\n                    // error give 400\r\n                    if (jdata['errors'] || jdata['error.code'] || jdata['error.message']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/customerText/_version/1/',\r\n                            uri: 'v1/resource/customerText/_version/1/',\r\n                            task: task,\r\n                            errors: jdata['errors'],\r\n                            'error.code': jdata['error.code'],\r\n                            'error.message': jdata['error.message']\r\n                        };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/customerText/_version/1/',\r\n                            uri: 'v1/resource/customerText/_version/1/',\r\n                            task: task,\r\n                            ntuser: jdata.ntuser,\r\n                            text: text,\r\n                            count: jdata['count']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (text === 'TI') {  // inhouseText count\r\n                    // error give 400\r\n                    if (jdata['errors'] || jdata['error.code'] || jdata['error.message']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/resource/inhouseText/_version/1/',\r\n                            task: task,\r\n                            errors: jdata['errors'],\r\n                            'error.code': jdata['error.code'],\r\n                            'error.message': jdata['error.message']\r\n                        };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/resource/inhouseText/_version/1/',\r\n                            task: task,\r\n                            ntuser: jdata.ntuser,\r\n                            text: text,\r\n                            count: jdata['count']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (jdata['questions']) { // question\r\n                    // error give 400\r\n                    if (jdata['errors'] || jdata['error.code'] || jdata['error.message']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/question/_version/1/',\r\n                            uri: 'v1/resource/question/_version/1/',\r\n                            task: task,\r\n                            errors: jdata['errors'],\r\n                            'error.code': jdata['error.code'],\r\n                            'error.message': jdata['error.message']\r\n                        };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                        // response\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/question/_version/1/',\r\n                            uri: 'v1/resource/question/_version/1/',\r\n                            task: task,\r\n                            ntuser: jdata.ntuser,\r\n                            'ams.user': jdata['ams.user']\r\n                        };\r\n                        // optional fields\r\n                        if (jdata['questions']) {\r\n                            json['questions'] = jdata['questions'];\r\n                        }\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else { // ams-view\r\n                    // ams error give a 400\r\n                    if (jdata['errors'] || jdata['error.code'] || jdata['error.message']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/ams-view/_version/1/',\r\n                            uri: 'v1/resource/ams-view/_version/1/',\r\n                            task: task,\r\n                            errors: jdata['errors'],\r\n                            'error.code': jdata['error.code'],\r\n                            'error.message': jdata['error.message']\r\n                        };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/ams-view/_version/1/',\r\n                            uri: 'v1/resource/ams-view/_version/1/',\r\n                            task: task,\r\n                            site: jdata.site,\r\n                            ntuser: jdata.ntuser,\r\n                            module: jdata.module,\r\n                            email: jdata.email,\r\n                            staff: jdata.staff,\r\n                            'ams.user': jdata['ams.user'],\r\n                            'ams.task.received.date': jdata['ams.task.received.date'],\r\n                            'task.product.group': jdata['task.product.group'],\r\n                            'ams.task.entry.time': jdata['ams.task.entry.time'],\r\n                            'task.status': jdata['task.status'],\r\n                            'task.priority': jdata['task.priority'],\r\n                            'ams.task.patient.safety': jdata['ams.task.patient.safety'],\r\n                            'ams.task.reference.number': jdata['ams.task.reference.number'],\r\n                            'ams.task.description': jdata['ams.task.description'],\r\n                            'task.request.type': jdata['task.request.type'],\r\n                            'ams.task.live.system': jdata['ams.task.live.system'],\r\n                            'ams.task.test.system': jdata['ams.task.test.system'],\r\n                            'ams.task.update.system': jdata['ams.task.update.system'],\r\n                            'ams.task.contact': jdata['ams.task.contact'],\r\n                            'ams.task.contact.phone': jdata['ams.task.contact.phone'],\r\n                            'task.received.by': jdata['task.received.by'],\r\n                            'task.last.edit': jdata['task.last.edit'],\r\n                            'task.category': jdata['task.category'],\r\n                            'ams.task.target.date': jdata['ams.task.target.date'],\r\n                            'task.support.group': jdata['task.support.group']\r\n                        };\r\n                        // optional fields\r\n                        if (jdata['ams.task.trap.file']) {\r\n                            json['ams.task.trap.file'] = jdata['ams.task.trap.file'];\r\n                        }\r\n                        if (jdata['ams.task.shift.date']) {\r\n                            json['ams.task.shift.date'] = jdata['ams.task.shift.date'];\r\n                        }\r\n                        if (jdata['task.shift']) {\r\n                            json['task.shift'] = jdata['task.shift'];\r\n                        }\r\n                        if (jdata['task.assigned.to']) {\r\n                            json['task.assigned.to'] = jdata['task.assigned.to'];\r\n                        }\r\n                        if (jdata['task.status.completed.date']) {\r\n                            json['task.status.completed.date'] = jdata['task.status.completed.date'];\r\n                        }\r\n                        if (jdata['priority.lists']) {\r\n                            json['priority.lists'] = jdata['priority.lists'];\r\n                        }\r\n                        if (jdata['module.notifications']) {\r\n                            json['module.notifications'] = jdata['module.notifications'];\r\n                        }\r\n                        if (jdata['related.issues']) {\r\n                            json['related.issues'] = jdata['related.issues'];\r\n                        }\r\n                        if (jdata['task.keywords']) {\r\n                            json['task.keywords'] = jdata['task.keywords'];\r\n                        }\r\n                        if (jdata['programs']) {\r\n                            json['programs'] = jdata['programs'];\r\n                        }\r\n                        if (jdata['development']) {\r\n                            json['development'] = jdata['development'];\r\n                        }\r\n                        if (jdata['web.uploaded.files']) {\r\n                            json['web.uploaded.files'] = jdata['web.uploaded.files'];\r\n                        }\r\n                        if (jdata['ams.added.files']) {\r\n                            json['ams.added.files'] = jdata['ams.added.files'];\r\n                        }\r\n                        if (jdata['ams.kb.articles']) {\r\n                            json['ams.kb.articles'] = jdata['ams.kb.articles'];\r\n                        }\r\n                        if (jdata['warnings']) {\r\n                            json['warnings'] = jdata['warnings'];\r\n                        }\r\n                        if (jdata['warning.text']) {\r\n                            json['warning.text'] = jdata['warning.text'];\r\n                        }\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                }\r\n            })\r\n            .then(resolvePromise, rejectPromise);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_put(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n        // Define variable\r\n        let task: string;\r\n        let TYPE: string;\r\n\r\n        Promise.all([ctx.apiInfo])\r\n            .then(([apiInfo]) => {\r\n                task = apiInfo.routeParams['task'];\r\n                switch (apiInfo.id) {\r\n                    case 'ams-edit._':\r\n                        TYPE = 'TaskPut';\r\n                        return putPackageAmsSend(task, TYPE, ctx);\r\n                    default:\r\n                        throw new RestApiRequestError(500);\r\n                }\r\n            })\r\n            .then(p => {\r\n                return putAmsData(p);\r\n            })\r\n            .then(a => {\r\n                let jdata = processAmsData(a);\r\n                if (jdata['errors']) {\r\n                    const errors = {\r\n                        resource: 'v1/resource/ams-edit/_version/1/',\r\n                        uri: 'v1/resource/ams-edit/_version/1/',\r\n                        task: task,\r\n                        errors: jdata['errors']\r\n                    };\r\n                    throw new RestApiRequestError(400, '', {}, errors);\r\n                } else {\r\n                    const json = {\r\n                        resource: 'v1/resource/ams-edit/_version/1/',\r\n                        uri: 'v1/resource/ams-edit/_version/1/',\r\n                        task: task,\r\n                        site: jdata.site,\r\n                        module: jdata.module,\r\n                        ntuser: jdata.ntuser,\r\n                        'task.last.edit': jdata['task.last.edit']\r\n                    };\r\n                    return { json, statusCode: 200 };\r\n                }\r\n            })\r\n            .then(resolvePromise, rejectPromise);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_patch(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n        Promise.all([ctx.apiInfo])\r\n            .then(([apiInfo]) => {\r\n\r\n                return this.patch(apiInfo.routeParams['Task'], ctx.body, ctx.headers['if-match'], ctx);\r\n            })\r\n            .then(json => {\r\n                return { statusCode: 200, json };\r\n            })\r\n            .then(resolvePromise)\r\n            .catch(rejectPromise);\r\n\r\n        // throw new RestApiRequestError(405);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_delete(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n        Promise.all([ctx.apiInfo])\r\n            .then(([apiInfo]) => {\r\n\r\n                return this.delete(apiInfo.routeParams['id'], ctx);\r\n            })\r\n            .then(json => {\r\n                return { statusCode: 204 };\r\n            })\r\n            .then(resolvePromise)\r\n            .catch(rejectPromise);\r\n        // throw new RestApiRequestError(405);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_post(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n        this.create(ctx.body, ctx)\r\n            .then(json => {\r\n                return { statusCode: 200, json };\r\n            })\r\n            .then(resolvePromise)\r\n            .catch(rejectPromise);\r\n        // throw new RestApiRequestError(405);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_head(dctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        throw new RestApiRequestError(405);\r\n    }\r\n\r\n    private patch(id: string, patch: JsonPatch.Operation[], ifMatch: string, ctx: RequestContext): Promise<any> {\r\n\r\n        patch.forEach(instruction => {\r\n\r\n            switch (instruction.path) {\r\n                case '/task':\r\n                case '/resource':\r\n                    throw new RestApiRequestError(400);\r\n            }\r\n        });\r\n\r\n        return this.find(id, ctx)\r\n            .then(json => {\r\n                if (json.etag !== ifMatch) {\r\n                    throw new RestApiRequestError(409);\r\n                }\r\n                JsonPatch.applyPatch(json, patch);\r\n                return this.save(json, ctx);\r\n            });\r\n    }\r\n\r\n    protected filePath(id: string) {\r\n\r\n        const file = path.normalize(path.join(this.dataPath, encodeURIComponent(id) + '.json'));\r\n\r\n        if (!file.startsWith(this.dataPath)) {\r\n            throw new RestApiRequestError(400);\r\n        }\r\n\r\n        return file;\r\n    }\r\n    private save<T extends { id: string, uri: string }>(json: T, ctx: RequestContext): Promise<T> {\r\n\r\n        const file = this.filePath(json.id);\r\n        const uri = json.uri = this.formUri(json.id);\r\n        StringUtil.applyEtag(json);\r\n\r\n        return FsUtil.directoryExists(this.dataPath)\r\n            .then((exists) => {\r\n\r\n                if (!exists) {\r\n                    return FsUtil.mkdir(this.dataPath);\r\n                }\r\n            })\r\n            .then(() => this.preCommitHook(json, ctx))\r\n            .then(() => FsUtil.writeJson(file, json))\r\n            .then(() => this.getResourceCacheSettings(ctx))\r\n            .then(cacheSettings => updateCache(CacheClass.Application, uri, {\r\n                update: true,\r\n                data: json,\r\n                tcfOverride: cacheSettings.getTimeConsideredFresh(),\r\n                ttlOverride: cacheSettings.getTimeToLive()\r\n            }, ctx))\r\n            .then(() => this.postCommitHook(json, ctx))\r\n            .then(() => json);\r\n    }\r\n\r\n    private create<T extends { id: string, uri: string, etag: string }>(json: T, ctx: RequestContext): Promise<T> {\r\n\r\n        const id = json.id = this.systemGeneratedId ? StringUtil.uuid() : json.id;\r\n\r\n        return this.find(id, ctx)\r\n            .then(current => {\r\n                throw new RestApiRequestError(409);\r\n            })\r\n            .catch(err => {\r\n                if (err instanceof RestApiRequestError && err.responseCode === 404) {\r\n                    return this.save(json, ctx);\r\n                }\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    private getResourceCacheSettings(ctx: RequestContext) {\r\n        return resolveModel(this.resourceUri, ctx)\r\n            .then((resource: Resource) => {\r\n                if (!resource.isTypeOf(resourceTypeUri)) {\r\n                    throw new Error('resourceUri provided is not a resource.');\r\n                }\r\n\r\n                return resource.cache;\r\n            });\r\n    }\r\n\r\n    private find(id: string, ctx: RequestContext) {\r\n\r\n        const file = this.filePath(id);\r\n\r\n        return getCache(CacheClass.Application, this.formUri(id), ctx, (): Promise<LoadResult> => {\r\n\r\n            return FsUtil.readJson(file)\r\n                .catch(err => {\r\n                    throw new RestApiRequestError(404);\r\n                })\r\n                .then(json => {\r\n                    return this.getResourceCacheSettings(ctx)\r\n                        .then(cacheSettings => {\r\n                            return {\r\n                                update: true,\r\n                                data: json,\r\n                                tcfOverride: cacheSettings.getTimeConsideredFresh(),\r\n                                ttlOverride: cacheSettings.getTimeToLive()\r\n                            };\r\n                        });\r\n                });\r\n        });\r\n    }\r\n\r\n    private delete(id: string, ctx: RequestContext) {\r\n\r\n        return this.preDeleteHook(id, ctx)\r\n            .then(() => FsUtil.unlink(this.filePath(id)))\r\n            .then(() => deleteCache(CacheClass.Application, this.formUri(id), ctx))\r\n            .then(() => this.postDeleteHook(id, ctx));\r\n    }\r\n\r\n}\r\n\r\nexport default AMSApis;"]}