{"version":3,"file":"index.js","sourceRoot":"D:/Programming/git/webapi-server-nodejs-v1.2/source/","sources":["protocols/native_handlers/AMSApis/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { RestApiRequestError } from '../../../errors';\r\nimport { Handler } from '../Handler';\r\nimport { Result } from '../../Protocol';\r\nimport { RequestContext } from '../../../RequestContext';\r\n\r\n// import * as http from 'http';\r\n// import * as https from 'https';\r\nimport { createConnection } from 'net';\r\n// import { resolve } from 'url';\r\n// import * as net from 'net';\r\n// import * as StreamBuffers from 'stream-buffers';\r\n// import * as URL from 'url';\r\nimport * as os from 'os';\r\n// import { ApiInfo } from '../../../util/Url';\r\n\r\n// constant for name length\r\nconst REMOTE_ADDR_L = '000b';\r\nconst REMOTE_HOST_L = '000b';\r\nconst HTTP_USER_AGENT_L = '000f';\r\nconst HTTPS_L = '0005';\r\nconst SERVER_PORT_L = '000b';\r\nconst SERVER_PORT_SECURE_L = '0012';\r\nconst NTUSER_L = '0006';\r\nconst TYPE_L = '0004';\r\nconst task_L = '0004';\r\nconst text_L = '0004';\r\nconst start_L = '0005';\r\nconst end_L = '0003';\r\n\r\n// interface for AMS package for GET\r\ninterface AmsPackageGet {\r\n    REMOTE_ADDR: string;\r\n    REMOTE_HOST: string;\r\n    HTTP_USER_AGENT: string;\r\n    HTTPS: string;\r\n    SERVER_PORT: string;\r\n    SERVER_PORT_SECURE: string;\r\n    NTUSER: string;\r\n    TYPE: string;\r\n    task: string;\r\n    text: string;\r\n    start: string;\r\n    end: string;\r\n    AMS_PARAM_TOTAL: string;\r\n}\r\n\r\n// interface for AMS package PUT\r\ninterface AmsPackagePut {\r\n    REMOTE_ADDR: string;\r\n    REMOTE_HOST: string;\r\n    HTTP_USER_AGENT: string;\r\n    HTTPS: string;\r\n    SERVER_PORT: string;\r\n    SERVER_PORT_SECURE: string;\r\n    NTUSER: string;\r\n    TYPE: string;\r\n    task: string;\r\n    AMS_PARAM_TOTAL: string;\r\n}\r\n\r\nasync function getAmsData(amsPackage: string) {\r\n    const HOST = '172.25.0.2';\r\n    const PORT = 1022;\r\n    let totalData = [];\r\n\r\n    totalData = [];\r\n    return new Promise((resolve, reject) => {\r\n        let client = createConnection({ host: HOST, port: PORT }, () => {\r\n            // 'connect' listener\r\n            // console.log('connected to server!');\r\n            let message = Buffer.from(amsPackage, 'hex');\r\n            client.write(message);\r\n        });\r\n        client.on('data', (data) => {\r\n            // console.log(`Received ${data.length} bytes of data.`);\r\n            totalData.push(data);\r\n        });\r\n        client.on('close', () => {\r\n            // console.log('disconnected from server');\r\n            let data = Buffer.concat(totalData);\r\n            client.destroy();\r\n            resolve(data);\r\n        });\r\n    });\r\n}\r\n\r\nasync function putAmsData(amsPacket: string) {\r\n    // Define constant\r\n    const HOST = '172.25.0.2';\r\n    const PORT = 1022;\r\n    // Define variable\r\n    let totalData = [];\r\n\r\n    totalData = [];\r\n    return new Promise((resolve, reject) => {\r\n        let client = createConnection({ host: HOST, port: PORT }, () => {\r\n            // 'connect' listener\r\n            // console.log('connected to server!');\r\n            // let message = Buffer.from('0017000c485454505f52454645524552002d687474703a2f2f61747765626465762e6d656469746563682e636f6d2f70726f6772616d732f416d732e657865000b52454d4f54455f41444452000e3137322e33302e3139302e313933000b52454d4f54455f484f5354000e3137322e33302e3139302e313933000f485454505f555345525f4147454e5400734d6f7a696c6c612f352e30202857696e646f7773204e542031302e303b2057696e36343b2078363429204170706c655765624b69742f3533372e333620284b48544d4c2c206c696b65204765636b6f29204368726f6d652f36332e302e333233392e313332205361666172692f3533372e3336000b485454505f434f4f4b4945019768756273706f7475746b3d61313033633763316232616239613033333932306539376433376634633537393b205f67613d4741312e322e3631353734363238362e313530383530393836363b205f6769643d4741312e322e313438303439323737392e313531363131333330383b205f5f687374633d3138383835393633362e61313033633763316232616239613033333932306539376433376634633537392e313530383936323436343831322e313531343330393238323730382e313531363133383435343530352e363b205f5f756e616d3d366434336436342d31363039336464653162332d32613961383532622d343b205f5f75746d613d3138383835393633362e3631353734363238362e313530383530393836362e313531363134303437312e313531363134303437312e313b205f5f75746d7a3d3138383835393633362e313531363134303437312e312e312e75746d6373723d28646972656374297c75746d63636e3d28646972656374297c75746d636d643d286e6f6e65293b20706373743d5d475255795b706a413533343438330005485454505300036f6666000b5345525645525f504f52540002383000125345525645525f504f52545f53454355524500013000064e54555345520011776c756f406d656469746563682e636f6d000454595045000c5461736b4564697446696c6500045461736b0007363730363533330006434f4f4b4945000f5d475255795b706a41353334343833000357414300055a5a5a4353000464657363001854455354494e4720544845204e4f544946434154494f4e530007636f6e74616374000e416e646572736f6e2c446f6e6e79000c636f6e7461637470686f6e6500000007686f737072656600000005656d61696c0000000a6e6f74696679747970650000000a6c69766573797374656d00026f6e000a7465737473797374656d00026f6e00086465736374657874000474657374000574736b737400014f', 'hex');\r\n            client.write(amsPacket);\r\n        });\r\n        client.on('data', (data) => {\r\n            // console.log(`Received ${data.length} bytes of data.`);\r\n            totalData.push(data);\r\n        });\r\n        client.on('close', () => {\r\n            // console.log('disconnected from server');\r\n            let data = Buffer.concat(totalData);\r\n            client.destroy();\r\n            resolve(data);\r\n        });\r\n    });\r\n}\r\n\r\nfunction processAmsData(buf) {\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    let header = '';\r\n    let resData = '';\r\n    // process for header\r\n    while (i < buf.length) {\r\n        if (buf.readIntBE(i, 1) === 2) {\r\n            j = i + 1; // value length position\r\n            k = buf.readIntBE(j, 1); // value length\r\n            // header terminate\r\n            if (k === 1 && buf.readInt8(j + 1) === 10) {\r\n                i = j + 2;\r\n                break;\r\n            }\r\n            let value = buf.slice(j + 1, j + k + 1);\r\n            header += value.toString();\r\n        }\r\n        i = j + k + 1;\r\n    }\r\n    // process for body\r\n    while (i < buf.length) {\r\n        if (buf.readIntBE(i, 1) === 2) {\r\n            j = i + 1; // value length position\r\n            k = buf.readIntBE(j, 1); // value length\r\n            let value = buf.slice(j + 1, j + k + 1);\r\n            resData += value.toString();\r\n        }\r\n        // data terminate\r\n        if (buf.readIntBE(i, 1) === 1) {\r\n            break;\r\n        }\r\n        i = j + k + 1;\r\n    }\r\n\r\n    return JSON.parse(resData);\r\n}\r\n\r\n// return localIP in array\r\nfunction getLocalIp() {\r\n    let interfaces = os.networkInterfaces();\r\n    let addresses = [];\r\n    for (let k in interfaces) {\r\n        for (let k2 in interfaces[k]) {\r\n            let address = interfaces[k][k2];\r\n            if (address.family === 'IPv4' && !address.internal) {\r\n                addresses.push(address.address);\r\n            }\r\n        }\r\n    }\r\n    return addresses;\r\n}\r\n\r\n// for length in the format of hex 0000\r\nfunction hex16(val) {\r\n    val &= 0xFFFF;\r\n    let hex = val.toString(16).toUpperCase();\r\n    return ('0000' + hex).slice(-4);\r\n}\r\n\r\n// from string  in for format of hex 00\r\nfunction stringToHex(str) {\r\n    let hex = '';\r\n    for (let i = 0; i < str.length; i++) {\r\n        hex += '' + str.charCodeAt(i).toString(16);\r\n    }\r\n    return hex;\r\n}\r\n\r\nfunction putPackageAmsSend(task: string, Type: string, ctx: RequestContext) {\r\n    // Define variable\r\n    let localIp = getLocalIp()[0];\r\n    let totalParameters: string;\r\n    let body: string;\r\n    let bodyJson: string[];\r\n\r\n    body = JSON.stringify(ctx.body);\r\n    bodyJson = body.match(/.{1,200}/g);\r\n    totalParameters = hex16(9 + bodyJson.length);\r\n\r\n    let amsPackage: AmsPackagePut = {\r\n        REMOTE_ADDR: localIp,\r\n        REMOTE_HOST: localIp,\r\n        HTTP_USER_AGENT: 'PostmanRuntime/7.1.1',\r\n        HTTPS: 'off',\r\n        SERVER_PORT: '80',\r\n        SERVER_PORT_SECURE: '0',\r\n        NTUSER: 'WLUO@meditech.com',\r\n        TYPE: Type,\r\n        task: task,\r\n        AMS_PARAM_TOTAL: totalParameters\r\n    };\r\n\r\n    let amsPacket = '';\r\n    amsPacket += amsPackage.AMS_PARAM_TOTAL;\r\n    amsPacket += REMOTE_ADDR_L + stringToHex('REMOTE_ADDR') + hex16(amsPackage.REMOTE_ADDR.length) + stringToHex(amsPackage.REMOTE_ADDR);\r\n    amsPacket += REMOTE_HOST_L + stringToHex('REMOTE_HOST') + hex16(amsPackage.REMOTE_HOST.length) + stringToHex(amsPackage.REMOTE_HOST);\r\n    amsPacket += HTTP_USER_AGENT_L + stringToHex('HTTP_USER_AGENT') + hex16(amsPackage.HTTP_USER_AGENT.length) + stringToHex(amsPackage.HTTP_USER_AGENT);\r\n    amsPacket += HTTPS_L + stringToHex('HTTPS') + hex16(amsPackage.HTTPS.length) + stringToHex(amsPackage.HTTPS);\r\n    amsPacket += SERVER_PORT_L + stringToHex('SERVER_PORT') + hex16(amsPackage.SERVER_PORT.length) + stringToHex(amsPackage.SERVER_PORT);\r\n    amsPacket += SERVER_PORT_SECURE_L + stringToHex('SERVER_PORT_SECURE') + hex16(amsPackage.SERVER_PORT_SECURE.length) + stringToHex(amsPackage.SERVER_PORT_SECURE);\r\n    amsPacket += NTUSER_L + stringToHex('NTUSER') + hex16(amsPackage.NTUSER.length) + stringToHex(amsPackage.NTUSER);\r\n    amsPacket += TYPE_L + stringToHex('TYPE') + hex16(amsPackage.TYPE.length) + stringToHex(amsPackage.TYPE);\r\n    amsPacket += task_L + stringToHex('task') + hex16(amsPackage.task.length) + stringToHex(amsPackage.task);\r\n    bodyJson.forEach((element, index) => {\r\n        let name_L = hex16(('jsonBody' + index).length);\r\n        let name = stringToHex('jsonBody' + index);\r\n        let value_L = hex16(element.length);\r\n        let value = stringToHex(element);\r\n        amsPacket += name_L + name + value_L + value;\r\n    });\r\n    return amsPacket;\r\n}\r\n\r\nfunction getPackageAmsSend(task: string, Type: string, text?: string, start?: string, end?: string) {\r\n    let localIp = getLocalIp()[0];\r\n    let totalParameters: string;\r\n\r\n    if (text) {\r\n        totalParameters = '000C';\r\n    } else {\r\n        totalParameters = '0009';\r\n    }\r\n    let amsPackage: AmsPackageGet = {\r\n        REMOTE_ADDR: localIp,\r\n        REMOTE_HOST: localIp,\r\n        HTTP_USER_AGENT: 'PostmanRuntime/7.1.1',\r\n        HTTPS: 'off',\r\n        SERVER_PORT: '80',\r\n        SERVER_PORT_SECURE: '0',\r\n        NTUSER: 'WLUO@meditech.com',\r\n        TYPE: Type,\r\n        task: task,\r\n        text: text,\r\n        start: start,\r\n        end: end,\r\n        AMS_PARAM_TOTAL: totalParameters\r\n    };\r\n\r\n    let amsPacket = '';\r\n    amsPacket += amsPackage.AMS_PARAM_TOTAL;\r\n    amsPacket += REMOTE_ADDR_L + stringToHex('REMOTE_ADDR') + hex16(amsPackage.REMOTE_ADDR.length) + stringToHex(amsPackage.REMOTE_ADDR);\r\n    amsPacket += REMOTE_HOST_L + stringToHex('REMOTE_HOST') + hex16(amsPackage.REMOTE_HOST.length) + stringToHex(amsPackage.REMOTE_HOST);\r\n    amsPacket += HTTP_USER_AGENT_L + stringToHex('HTTP_USER_AGENT') + hex16(amsPackage.HTTP_USER_AGENT.length) + stringToHex(amsPackage.HTTP_USER_AGENT);\r\n    amsPacket += HTTPS_L + stringToHex('HTTPS') + hex16(amsPackage.HTTPS.length) + stringToHex(amsPackage.HTTPS);\r\n    amsPacket += SERVER_PORT_L + stringToHex('SERVER_PORT') + hex16(amsPackage.SERVER_PORT.length) + stringToHex(amsPackage.SERVER_PORT);\r\n    amsPacket += SERVER_PORT_SECURE_L + stringToHex('SERVER_PORT_SECURE') + hex16(amsPackage.SERVER_PORT_SECURE.length) + stringToHex(amsPackage.SERVER_PORT_SECURE);\r\n    amsPacket += NTUSER_L + stringToHex('NTUSER') + hex16(amsPackage.NTUSER.length) + stringToHex(amsPackage.NTUSER);\r\n    amsPacket += TYPE_L + stringToHex('TYPE') + hex16(amsPackage.TYPE.length) + stringToHex(amsPackage.TYPE);\r\n    amsPacket += task_L + stringToHex('task') + hex16(amsPackage.task.length) + stringToHex(amsPackage.task);\r\n\r\n    if (text) {\r\n        amsPacket += text_L + stringToHex('text') + hex16(amsPackage.text.length) + stringToHex(amsPackage.text);\r\n        amsPacket += start_L + stringToHex('start') + hex16(amsPackage.start.length) + stringToHex(amsPackage.start);\r\n        amsPacket += end_L + stringToHex('end') + hex16(amsPackage.end.length) + stringToHex(amsPackage.end);\r\n    }\r\n\r\n    return amsPacket;\r\n}\r\n\r\nexport class AMSApis extends Handler {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_get(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        let task: string;\r\n        let range: string;\r\n        let start: string;\r\n        let end: string;\r\n        let TYPE: string;\r\n        let text: string;\r\n\r\n        Promise.all([ctx.apiInfo])\r\n            .then(([apiInfo]) => {\r\n                task = apiInfo.routeParams['task'];\r\n                switch (apiInfo.id) {\r\n                    case 'ams-view._':\r\n                        TYPE = 'TaskGet';\r\n                        return getPackageAmsSend(task, TYPE);\r\n                    case 'ams-view._.customerText._':\r\n                        TYPE = 'TaskGetText';\r\n                        range = apiInfo.routeParams['range'];\r\n                        if (range) {\r\n                            text = 'C';\r\n                        } else {\r\n                            text = 'TC';\r\n                        }\r\n                        start = range.split('-')[0];\r\n                        end = range.split('-')[1];\r\n                        return getPackageAmsSend(task, TYPE, text, start, end);\r\n                    case 'ams-view._.inhouseText._':\r\n                        TYPE = 'TaskGetText';\r\n                        range = apiInfo.routeParams['range'];\r\n                        if (range) {\r\n                            text = 'I';\r\n                        } else {\r\n                            text = 'TI';\r\n                        }\r\n                        start = range.split('-')[0];\r\n                        end = range.split('-')[1];\r\n                        return getPackageAmsSend(task, TYPE, text, start, end);\r\n                    default:\r\n                        throw new RestApiRequestError(500);\r\n                }\r\n            })\r\n            .then(p => {\r\n                return getAmsData(p);\r\n            })\r\n            .then(a => {\r\n                let jdata = processAmsData(a);\r\n\r\n                if (text === 'C') {\r\n                    if (jdata['errors']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/customerText/_version/1/',\r\n                            uri: 'v1/customerText/',\r\n                            task: task,\r\n                            errors: jdata['errors']\r\n                        };\r\n                        // return { errors, statusCode: 500 };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/customerText/_version/1/',\r\n                            uri: 'v1/customerText/',\r\n                            task: task,\r\n                            text: text,\r\n                            start: start,\r\n                            end: end,\r\n                            event: jdata['event']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (text === 'I') {\r\n                    if (jdata['errors']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/inhouseText/',\r\n                            task: task,\r\n                            errors: jdata['errors']\r\n                        };\r\n                        // return { errors, statusCode: 500 };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/inhouseText/',\r\n                            task: task,\r\n                            text: text,\r\n                            start: start,\r\n                            end: end,\r\n                            event: jdata['event']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (text === 'TC') {\r\n                    if (jdata['errors']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/inhouseText/',\r\n                            task: task,\r\n                            errors: jdata['errors']\r\n                        };\r\n                        // return { errors, statusCode: 500 };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/inhouseText/',\r\n                            task: task,\r\n                            text: text,\r\n                            count: jdata['count']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else if (text === 'TI') {\r\n                    if (jdata['errors']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/inhouseText/',\r\n                            task: task,\r\n                            errors: jdata['errors']\r\n                        };\r\n                        // return { errors, statusCode: 500 };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/inhouseText/_version/1/',\r\n                            uri: 'v1/inhouseText/',\r\n                            task: task,\r\n                            text: text,\r\n                            count: jdata['count']\r\n                        };\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                } else {\r\n                    // ams error give a 400\r\n                    if (jdata['errors']) {\r\n                        const errors = {\r\n                            resource: 'v1/resource/ams-view/_version/1/',\r\n                            uri: 'v1/ams-view/',\r\n                            task: task,\r\n                            errors: jdata['errors']\r\n                        };\r\n                        // return { errors, statusCode: 500 };\r\n                        throw new RestApiRequestError(400, '', {}, errors);\r\n                    } else {\r\n                        // require fields\r\n                        const json = {\r\n                            resource: 'v1/resource/ams-view/_version/1/',\r\n                            uri: 'v1/ams-view/',\r\n                            task: task,\r\n                            site: jdata.site,\r\n                            module: jdata.module,\r\n                            'ams.task.received.date': jdata['ams.task.received.date'],\r\n                            'ams.task.product.group': jdata['ams.task.product.group'],\r\n                            'ams.task.entry.time': jdata['ams.task.entry.time'],\r\n                            'task.status': jdata['task.status'],\r\n                            'task.priority': jdata['task.priority'],\r\n                            'ams.task.patient.safety': jdata['ams.task.patient.safety'],\r\n                            'ams.task.reference.number': jdata['ams.task.reference.number'],\r\n                            'ams.task.description': jdata['ams.task.description'],\r\n                            'task.request.type': jdata['task.request.type'],\r\n                            'ams.task.live.system': jdata['ams.task.live.system'],\r\n                            'ams.task.test.system': jdata['ams.task.test.system'],\r\n                            'ams.task.update.system': jdata['ams.task.update.system'],\r\n                            'ams.task.contact': jdata['ams.task.contact'],\r\n                            'ams.task.contact.phone': jdata['ams.task.contact.phone'],\r\n                            'email': jdata['email'],\r\n                            'task.received.by': jdata['task.received.by'],\r\n                            'task.application.specialist': jdata['task.application.specialist'],\r\n                            'task.other.staff': jdata['task.other.staff'],\r\n                            'task.last.edit': jdata['task.last.edit']\r\n                        };\r\n                        // optional fields\r\n                        if (jdata['task.status.completed.date']) {\r\n                            json['task.status.completed.date'] = jdata['task.status.completed.date'];\r\n                        }\r\n                        if (jdata['priority.lists']) {\r\n                            json['priority.lists'] = jdata['priority.lists'];\r\n                        }\r\n                        if (jdata['module.notifications']) {\r\n                            json['module.notifications'] = jdata['module.notifications'];\r\n                        }\r\n                        if (jdata['task.responsible.user']) {\r\n                            json['task.responsible.user'] = jdata['task.responsible.user'];\r\n                        }\r\n                        if (jdata['integrated.modules']) {\r\n                            json['integrated.modules'] = jdata['integrated.modules'];\r\n                        }\r\n                        if (jdata['related.issues']) {\r\n                            json['related.issues'] = jdata['related.issues'];\r\n                        }\r\n                        if (jdata['web.uploaded.files']) {\r\n                            json['web.uploaded.files'] = jdata['web.uploaded.files'];\r\n                        }\r\n                        if (jdata['ams.added.files']) {\r\n                            json['ams.added.files'] = jdata['ams.added.files'];\r\n                        }\r\n                        if (jdata['ams.kb.articles']) {\r\n                            json['ams.kb.articles'] = jdata['ams.kb.articles'];\r\n                        }\r\n                        if (jdata['warnings']) {\r\n                            json['warnings'] = jdata['warnings'];\r\n                        }\r\n                        return { json, statusCode: 200 };\r\n                    }\r\n                }\r\n            })\r\n            .then(resolvePromise, rejectPromise);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_put(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n        // Define variable\r\n        let task: string;\r\n        let TYPE: string;\r\n        // let body: string;\r\n\r\n        Promise.all([ctx.apiInfo])\r\n            .then(([apiInfo]) => {\r\n                task = apiInfo.routeParams['Task'];\r\n                switch (apiInfo.id) {\r\n                    case 'ams-edit._':\r\n                        TYPE = 'TaskPut';\r\n                        return putPackageAmsSend(task, TYPE, ctx);\r\n                    default:\r\n                        throw new RestApiRequestError(500);\r\n                }\r\n            })\r\n            .then(p => {\r\n                return putAmsData(p);\r\n            })\r\n            .then(a => {\r\n                // let jdata = processAmsData(a);\r\n                const json = {\r\n                    resource: 'v1/resource/ams-edit/_version/1/',\r\n                    uri: 'v1/ams-edit/',\r\n                    task: task\r\n                };\r\n                return { json, statusCode: 200 };\r\n            })\r\n            .then(resolvePromise, rejectPromise);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_patch(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        throw new RestApiRequestError(405);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_delete(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        throw new RestApiRequestError(405);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_post(ctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        throw new RestApiRequestError(405);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected _execute_head(dctx: RequestContext, resolvePromise: (result: Result) => void, rejectPromise: (err: any) => void): void {\r\n\r\n        throw new RestApiRequestError(405);\r\n    }\r\n}\r\n\r\nexport default AMSApis;"]}